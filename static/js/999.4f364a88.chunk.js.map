{"version":3,"file":"static/js/999.4f364a88.chunk.js","mappings":"wOAAMA,EAAU,mCACVC,EAAQC,EAAAA,MAAAA,QACCC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,yFAC+BH,EAAMI,IAAN,mDACUD,EADV,4BACgCJ,EADhC,oBAD/B,cACUM,EADV,OAGUC,EAAWD,EAAaE,KAAKC,KAHvC,kBAIWF,GAJX,kEAMA,MAPA,SACeJ,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mBC2Cf,EAvCa,SAAAO,GACX,IAAQN,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KAFoB,wCAIpB,WAAkCT,GAAlC,gGAE6BD,EAAUC,GAFvC,OAEYG,EAFZ,OAGMM,EAAQN,GAHd,gDAKQO,QAAQC,IAAR,MALR,yDAJoB,yBAYpBC,EAAAA,EAAAA,YAAU,YAZU,oCAalBC,CAAmBb,EACpB,GAAE,CAACA,IAWJ,OACE,mCAEE,wBAbe,SAACK,GAClB,OAAOA,EAAKS,KACV,SAAAC,GAAI,OACF,2BACE,gBAAKC,UAAU,gBAAf,UAA+B,gBAAKC,IAAG,6CAAwCF,EAAKG,cAAgBC,IAAI,iCACxG,uBAAIJ,EAAKK,QACT,uBAAIL,EAAKM,cAHFN,EAAKf,GADZ,GAOP,CAKMsB,CAAWjB,OAInB,C","sources":["services/fetchCast.js","components/MovieDetailsComponent/Cast.jsx"],"sourcesContent":["const API_KEY = 'de343408ee71dab0921495888bb73ef5';\nconst axios = require('axios').default;\nasync function fetchCast (id) {\n    const responseData = await axios.get(`\n    https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    const response = responseData.data.cast;\n    return response\n}\nexport default fetchCast;","import React from 'react';\nimport fetchCast from 'services/fetchCast';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cast = props => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  async function fetchCastComponent(id) {\n      try {\n        const response = await fetchCast(id);\n        setCast(response);\n      } catch (error) {\n          console.log(error)\n      }\n  }\n  useEffect(() => {\n    fetchCastComponent(id);\n  }, [id]);\n  const renderCast = (cast) => {\n    return cast.map(\n      elem =>\n        <li key={elem.id}>\n          <div className='CastMiniature'><img src={`https://image.tmdb.org/t/p/original${elem.profile_path}`} alt=\"this actor has no profile\"/></div>      \n          <p>{elem.name}</p>\n          <p>{elem.character}</p>\n        </li>\n    )\n  }\n  return (\n    <div>\n      Cast\n      <ul>\n        {renderCast(cast)}\n      </ul>\n    </div>\n  )\n}\n\nCast.propTypes = {\n  renderCast: PropTypes.element,\n}\n\nexport default Cast\n"],"names":["API_KEY","axios","require","fetchCast","id","get","responseData","response","data","cast","props","useParams","useState","setCast","console","log","useEffect","fetchCastComponent","map","elem","className","src","profile_path","alt","name","character","renderCast"],"sourceRoot":""}