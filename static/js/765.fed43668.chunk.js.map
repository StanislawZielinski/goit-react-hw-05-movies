{"version":3,"file":"static/js/765.fed43668.chunk.js","mappings":"wOAAMA,EAAU,mCACVC,EAAQC,EAAAA,MAAAA,QACCC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,yFAC+BH,EAAMI,IAAN,mDACUD,EADV,4BACgCJ,EADhC,oBAD/B,cACUM,EADV,OAGUC,EAAWD,EAAaE,KAAKC,QAHvC,kBAIWF,GAJX,kEAMA,MAPA,SACeJ,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mBC2Cf,EAvCe,SAAAO,GACb,IAAQN,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAFsB,wCAItB,WAA+BV,GAA/B,gGAE6BD,EAAYC,GAFzC,OAEYG,EAFZ,OAGMO,EAAUP,GAHhB,gDAKQQ,QAAQC,IAAR,MALR,yDAJsB,yBAYtBC,EAAAA,EAAAA,YAAU,YAZY,oCAapBC,CAAgBd,EACjB,GAAE,CAACA,IAUJ,OACE,qCAEE,wBACGS,EAAOM,OAAS,EAbF,SAACN,GACpB,OAAOA,EAAOO,KACZ,SAAAC,GAAI,OACF,2BACE,wBAAKA,EAAKC,UACV,uBAAID,EAAKE,YAFFF,EAAKjB,GADZ,GAMP,CAK2BoB,CAAaX,IAAY,sDAItD,C","sources":["services/fetchReview.js","components/MovieDetailsComponent/Review.jsx"],"sourcesContent":["const API_KEY = 'de343408ee71dab0921495888bb73ef5';\nconst axios = require('axios').default;\nasync function fetchReview (id) {\n    const responseData = await axios.get(`\n    https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    const response = responseData.data.results;\n    return response\n}\nexport default fetchReview;","import React from 'react';\nimport fetchReview from 'services/fetchReview';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Review = props => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n\n  async function fetchCastReview(id) {\n      try {\n        const response = await fetchReview(id);\n        setReview(response);\n      } catch (error) {\n          console.log(error)\n      }\n  }\n  useEffect(() => {\n    fetchCastReview(id);\n  }, [id]);\n  const renderReview = (review) => {\n    return review.map(\n      elem =>\n        <li key={elem.id}>\n          <h5>{elem.author}</h5>\n          <p>{elem.content}</p>\n        </li>\n    )\n  }\n  return (\n    <div>\n      Review\n      <ul>\n        {review.length > 0 ? (renderReview(review)) : (<p>There is no review yet</p>)}\n      </ul>\n    </div>\n  )\n}\n\nReview.propTypes = {\n  review: PropTypes.array,\n  renderReview: PropTypes.element,\n}\n\nexport default Review\n"],"names":["API_KEY","axios","require","fetchReview","id","get","responseData","response","data","results","props","useParams","useState","review","setReview","console","log","useEffect","fetchCastReview","length","map","elem","author","content","renderReview"],"sourceRoot":""}